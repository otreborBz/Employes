{
    "sourceFile": "src/components/alert/Alert.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1760560533264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760560566439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Ionicons } from '@expo/vector-icons';\n import { Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n+import \n \n const alertIcons = {\n   success: { name: 'checkmark-circle-outline', color: '#28a745' },\n   error: { name: 'close-circle-outline', color: '#dc3545' },\n"
                },
                {
                    "date": 1760560576574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import { Ionicons } from '@expo/vector-icons';\n+import { Modal, Text, TouchableOpacity, View } from 'react-native';\n+import styles from './styles';\n+\n+\n+const alertIcons = {\n+  success: { name: 'checkmark-circle-outline', color: '#28a745' },\n+  error: { name: 'close-circle-outline', color: '#dc3545' },\n+  warning: { name: 'alert-circle-outline', color: '#ffc107' },\n+  confirm: { name: 'help-circle-outline', color: '#007bff' },\n+};\n+\n+export default function CustomAlert({ visible, type = 'success', title, message, buttons, onClose }) {\n+  const icon = alertIcons[type] || alertIcons.success;\n+\n+  return (\n+    <Modal\n+      visible={visible}\n+      transparent\n+      animationType=\"fade\"\n+      onRequestClose={onClose}\n+    >\n+      <View style={styles.modalContainer}>\n+        <View style={styles.alertBox}>\n+          <Ionicons name={icon.name} size={50} color={icon.color} style={styles.icon} />\n+\n+          <Text style={styles.title}>{title}</Text>\n+          <Text style={styles.message}>{message}</Text>\n+\n+          <View style={styles.buttonContainer}>\n+            {buttons && buttons.map((button, index) => {\n+              let buttonStyle = styles.button;\n+              let textStyle = styles.buttonText;\n+\n+              if (button.style === 'destructive') {\n+                buttonStyle = [styles.button, styles.destructiveButton];\n+                textStyle = [styles.buttonText, { color: '#fff' }];\n+              } else if (button.style === 'cancel') {\n+                buttonStyle = [styles.button, styles.cancelButton];\n+                textStyle = [styles.buttonText, { color: '#333' }];\n+              }\n+\n+              return (\n+                <TouchableOpacity\n+                  key={index}\n+                  style={buttonStyle}\n+                  onPress={() => {\n+                    if (button.onPress) button.onPress();\n+                    onClose(); // Fecha o alerta após o clique\n+                  }}\n+                >\n+                  <Text style={textStyle}>{button.text}</Text>\n+                </TouchableOpacity>\n+              );\n+            })}\n+          </View>\n+        </View>\n+      </View>\n+    </Modal>\n+  );\n+};\n+\n"
                }
            ],
            "date": 1760560533264,
            "name": "Commit-0",
            "content": "import { Ionicons } from '@expo/vector-icons';\nimport { Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nconst alertIcons = {\n  success: { name: 'checkmark-circle-outline', color: '#28a745' },\n  error: { name: 'close-circle-outline', color: '#dc3545' },\n  warning: { name: 'alert-circle-outline', color: '#ffc107' },\n  confirm: { name: 'help-circle-outline', color: '#007bff' },\n};\n\nexport default function CustomAlert({ visible, type = 'success', title, message, buttons, onClose }) {\n  const icon = alertIcons[type] || alertIcons.success;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.alertBox}>\n          <Ionicons name={icon.name} size={50} color={icon.color} style={styles.icon} />\n\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.message}>{message}</Text>\n\n          <View style={styles.buttonContainer}>\n            {buttons && buttons.map((button, index) => {\n              let buttonStyle = styles.button;\n              let textStyle = styles.buttonText;\n\n              if (button.style === 'destructive') {\n                buttonStyle = [styles.button, styles.destructiveButton];\n                textStyle = [styles.buttonText, { color: '#fff' }];\n              } else if (button.style === 'cancel') {\n                buttonStyle = [styles.button, styles.cancelButton];\n                textStyle = [styles.buttonText, { color: '#333' }];\n              }\n\n              return (\n                <TouchableOpacity\n                  key={index}\n                  style={buttonStyle}\n                  onPress={() => {\n                    if (button.onPress) button.onPress();\n                    onClose(); // Fecha o alerta após o clique\n                  }}\n                >\n                  <Text style={textStyle}>{button.text}</Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\n"
        }
    ]
}