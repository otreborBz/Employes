{
    "sourceFile": "src/components/CustomAlert.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760477178990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760477178990,
            "name": "Commit-0",
            "content": "import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nconst alertIcons = {\n  success: { name: 'checkmark-circle-outline', color: '#28a745' },\n  error: { name: 'close-circle-outline', color: '#dc3545' },\n  warning: { name: 'alert-circle-outline', color: '#ffc107' },\n  confirm: { name: 'help-circle-outline', color: '#007bff' },\n};\n\nconst CustomAlert = ({ visible, type = 'success', title, message, buttons, onClose }) => {\n  const icon = alertIcons[type] || alertIcons.success;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.alertBox}>\n          <Ionicons name={icon.name} size={50} color={icon.color} style={styles.icon} />\n\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.message}>{message}</Text>\n\n          <View style={styles.buttonContainer}>\n            {buttons && buttons.map((button, index) => {\n              let buttonStyle = styles.button;\n              let textStyle = styles.buttonText;\n\n              if (button.style === 'destructive') {\n                buttonStyle = [styles.button, styles.destructiveButton];\n                textStyle = [styles.buttonText, { color: '#fff' }];\n              } else if (button.style === 'cancel') {\n                buttonStyle = [styles.button, styles.cancelButton];\n                textStyle = [styles.buttonText, { color: '#333' }];\n              }\n\n              return (\n                <TouchableOpacity\n                  key={index}\n                  style={buttonStyle}\n                  onPress={() => {\n                    if (button.onPress) button.onPress();\n                    onClose(); // Fecha o alerta apÃ³s o clique\n                  }}\n                >\n                  <Text style={textStyle}>{button.text}</Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  alertBox: {\n    width: '85%',\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 25,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  icon: {\n    marginBottom: 15,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: '#1E2A38',\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  message: {\n    fontSize: 16,\n    color: '#555',\n    textAlign: 'center',\n    marginBottom: 25,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  button: {\n    flex: 1,\n    backgroundColor: '#007bff',\n    paddingVertical: 12,\n    borderRadius: 10,\n    marginHorizontal: 5,\n    alignItems: 'center',\n  },\n  destructiveButton: {\n    backgroundColor: '#dc3545',\n  },\n  cancelButton: {\n    backgroundColor: '#f0f0f0',\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n\nexport default CustomAlert;\n"
        }
    ]
}