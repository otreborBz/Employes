{
    "sourceFile": "src/screens/home/Home.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1760462606139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760466859729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,101 @@\n import { StyleSheet, Text, View } from \"react-native\";\n+import { getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n+import { useEffect, useState } from \"react\";\n+import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n \n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+  const [totalFuncionarios, setTotalFuncionarios] = useState(0);\n \n export default function Home() {\n+  useEffect(() => {\n+    // Recarrega os dados sempre que a tela estiver em foco\n+    if (isFocused) {\n+      async function loadData() {\n+        const funcionarios = await getFuncionarios();\n+        setTotalFuncionarios(funcionarios.length);\n+      }\n+      loadData();\n+    }\n\\ No newline at end of file\n+  }, [isFocused]);\n+\n   return (\n     <View style={styles.container}>\n       <Text>Home</Text>\n+      <Text style={styles.title}>Painel de Controle</Text>\n+      <Text style={styles.subtitle}>Bem-vindo ao sistema de gestão.</Text>\n+\n+      <View style={styles.card}>\n+        <Text style={styles.cardTitle}>Total de Funcionários</Text>\n+        <Text style={styles.cardNumber}>{totalFuncionarios}</Text>\n+      </View>\n+\n+      <TouchableOpacity\n+        style={styles.button}\n+        onPress={() => navigation.navigate('Employes')}\n+      >\n+        <Text style={styles.buttonText}>Gerenciar Funcionários</Text>\n+      </TouchableOpacity>\n     </View>\n   );\n }\n \n const styles = StyleSheet.create({\n   container: {\n     flex: 1,\n+    backgroundColor: '#f0f4f7',\n+    padding: 20,\n+  },\n+  title: {\n+    fontSize: 28,\n+    fontWeight: 'bold',\n+    color: '#333',\n+    marginBottom: 8,\n+  },\n+  subtitle: {\n+    fontSize: 16,\n+    color: '#666',\n+    marginBottom: 30,\n+  },\n+  card: {\n     backgroundColor: '#fff',\n+    borderRadius: 12,\n+    padding: 25,\n     alignItems: 'center',\n     justifyContent: 'center',\n+    marginBottom: 20,\n+    shadowColor: '#000',\n+    shadowOffset: { width: 0, height: 2 },\n+    shadowOpacity: 0.1,\n+    shadowRadius: 4,\n+    elevation: 3,\n   },\n }\n \n-)\n+)\n+  cardTitle: {\n+    fontSize: 18,\n+    color: '#555',\n+    fontWeight: '600',\n+  },\n+  cardNumber: {\n+    fontSize: 48,\n+    fontWeight: 'bold',\n+    color: '#007BFF',\n+    marginTop: 10,\n+  },\n+  button: {\n+    backgroundColor: '#007BFF',\n+    padding: 18,\n+    borderRadius: 12,\n+    alignItems: 'center',\n+    marginTop: 10,\n+  },\n+  buttonText: {\n+    color: '#fff',\n+    fontSize: 18,\n+    fontWeight: 'bold',\n+  },\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760467409591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,101 +1,153 @@\n-import { StyleSheet, Text, View } from \"react-native\";\n import { getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { Ionicons } from '@expo/vector-icons';\n import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n import { useEffect, useState } from \"react\";\n-import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n+import { FlatList, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\n \n export default function Home() {\n   const navigation = useNavigation();\n   const isFocused = useIsFocused();\n-  const [totalFuncionarios, setTotalFuncionarios] = useState(0);\n \n-export default function Home() {\n+  const [searchQuery, setSearchQuery] = useState('');\n+  const [allFuncionarios, setAllFuncionarios] = useState([]);\n+  const [filteredFuncionarios, setFilteredFuncionarios] = useState([]);\n+\n   useEffect(() => {\n     // Recarrega os dados sempre que a tela estiver em foco\n     if (isFocused) {\n       async function loadData() {\n         const funcionarios = await getFuncionarios();\n-        setTotalFuncionarios(funcionarios.length);\n+        setAllFuncionarios(funcionarios);\n+        setFilteredFuncionarios(funcionarios);\n       }\n       loadData();\n     }\n   }, [isFocused]);\n \n+  useEffect(() => {\n+    const filtered = allFuncionarios.filter(func =>\n+      func.nome.toLowerCase().includes(searchQuery.toLowerCase())\n+    );\n+    setFilteredFuncionarios(filtered);\n+  }, [searchQuery, allFuncionarios]);\n+\n   return (\n     <View style={styles.container}>\n-      <Text>Home</Text>\n-      <Text style={styles.title}>Painel de Controle</Text>\n-      <Text style={styles.subtitle}>Bem-vindo ao sistema de gestão.</Text>\n+      <View style={styles.header}>\n+        <Text style={styles.title}>Funcionários</Text>\n+        <TouchableOpacity\n+          style={styles.addButton}\n+          onPress={() => navigation.navigate('Employes')}\n+        >\n+          <Ionicons name=\"add\" size={24} color=\"#fff\" />\n+          <Text style={styles.addButtonText}>Adicionar</Text>\n+        </TouchableOpacity>\n+      </View>\n \n-      <View style={styles.card}>\n-        <Text style={styles.cardTitle}>Total de Funcionários</Text>\n-        <Text style={styles.cardNumber}>{totalFuncionarios}</Text>\n+      <View style={styles.searchContainer}>\n+        <Ionicons name=\"search\" size={20} color=\"#888\" style={styles.searchIcon} />\n+        <TextInput\n+          style={styles.searchInput}\n+          placeholder=\"Buscar por nome...\"\n+          placeholderTextColor=\"#888\"\n+          value={searchQuery}\n+          onChangeText={setSearchQuery}\n+        />\n       </View>\n \n-      <TouchableOpacity\n-        style={styles.button}\n-        onPress={() => navigation.navigate('Employes')}\n-      >\n-        <Text style={styles.buttonText}>Gerenciar Funcionários</Text>\n-      </TouchableOpacity>\n+      <FlatList\n+        data={filteredFuncionarios}\n+        keyExtractor={item => item.id.toString()}\n+        renderItem={({ item }) => (\n+          <View style={styles.listItem}>\n+            <View>\n+              <Text style={styles.listItemName}>{item.nome}</Text>\n+              <Text style={styles.listItemDetails}>RE: {item.re} | Setor: {item.setor}</Text>\n+            </View>\n+          </View>\n+        )}\n+        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum funcionário encontrado.</Text>}\n+        contentContainerStyle={{ paddingBottom: 20 }}\n+      />\n     </View>\n   );\n }\n \n const styles = StyleSheet.create({\n   container: {\n     flex: 1,\n-    backgroundColor: '#f0f4f7',\n-    padding: 20,\n+    backgroundColor: '#F9FAFB',\n+    paddingHorizontal: 20,\n+    paddingTop: 20,\n   },\n+  header: {\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+    marginBottom: 20,\n+  },\n   title: {\n     fontSize: 28,\n     fontWeight: 'bold',\n     color: '#333',\n-    marginBottom: 8,\n   },\n-  subtitle: {\n+  addButton: {\n+    backgroundColor: '#007BFF',\n+    flexDirection: 'row',\n+    paddingHorizontal: 14,\n+    paddingVertical: 8,\n+    borderRadius: 20,\n+    alignItems: 'center',\n+  },\n+  addButtonText: {\n+    color: '#fff',\n+    fontWeight: 'bold',\n+    marginLeft: 6,\n+  },\n+  searchContainer: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    paddingHorizontal: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    marginBottom: 20,\n+  },\n+  searchIcon: {\n+    marginRight: 8,\n+  },\n+  searchInput: {\n+    flex: 1,\n+    height: 45,\n     fontSize: 16,\n-    color: '#666',\n-    marginBottom: 30,\n+    color: '#333',\n   },\n-  card: {\n+  listItem: {\n     backgroundColor: '#fff',\n-    borderRadius: 12,\n-    padding: 25,\n+    padding: 15,\n+    borderRadius: 10,\n+    marginBottom: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n     alignItems: 'center',\n-    justifyContent: 'center',\n-    marginBottom: 20,\n-    shadowColor: '#000',\n-    shadowOffset: { width: 0, height: 2 },\n-    shadowOpacity: 0.1,\n-    shadowRadius: 4,\n-    elevation: 3,\n   },\n-}\n-\n-)\n-  cardTitle: {\n-    fontSize: 18,\n-    color: '#555',\n+  listItemName: {\n+    fontSize: 17,\n     fontWeight: '600',\n+    color: '#1E2A38',\n   },\n-  cardNumber: {\n-    fontSize: 48,\n-    fontWeight: 'bold',\n-    color: '#007BFF',\n-    marginTop: 10,\n+  listItemDetails: {\n+    fontSize: 14,\n+    color: '#666',\n+    marginTop: 4,\n   },\n-  button: {\n-    backgroundColor: '#007BFF',\n-    padding: 18,\n-    borderRadius: 12,\n-    alignItems: 'center',\n-    marginTop: 10,\n+  emptyText: {\n+    textAlign: 'center',\n+    marginTop: 50,\n+    color: '#777',\n+    fontSize: 16,\n   },\n-  buttonText: {\n-    color: '#fff',\n-    fontSize: 18,\n-    fontWeight: 'bold',\n-  },\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760467738206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,176 @@\n+import { getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n+import { useEffect, useState } from \"react\";\n+import { FlatList, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [searchQuery, setSearchQuery] = useState('');\n+  const [allFuncionarios, setAllFuncionarios] = useState([]);\n+  const [filteredFuncionarios, setFilteredFuncionarios] = useState([]);\n+\n+  useEffect(() => {\n+    // Recarrega os dados sempre que a tela estiver em foco\n+    if (isFocused) {\n+      async function loadData() {\n+        const funcionarios = await getFuncionarios();\n+        setAllFuncionarios(funcionarios);\n+        setFilteredFuncionarios(funcionarios);\n+      }\n+      loadData();\n+    }\n+  }, [isFocused]);\n+\n+  useEffect(() => {\n+    const filtered = allFuncionarios.filter(func =>\n+      func.nome.toLowerCase().includes(searchQuery.toLowerCase())\n+    );\n+    setFilteredFuncionarios(filtered);\n+  }, [searchQuery, allFuncionarios]);\n+\n+  return (\n+    <View style={styles.container}>\n+      <View style={styles.header}>\n+        <Text style={styles.title}>Funcionários</Text>\n+        <TouchableOpacity\n+          style={styles.addButton}\n+          onPress={() => navigation.navigate('Employes')}\n+        >\n+          <Ionicons name=\"add\" size={24} color=\"#fff\" />\n+          <Text style={styles.addButtonText}>Adicionar</Text>\n+        </TouchableOpacity>\n+      </View>\n+\n+      <View style={styles.searchContainer}>\n+        <Ionicons name=\"search\" size={20} color=\"#888\" style={styles.searchIcon} />\n+        <TextInput\n+          style={styles.searchInput}\n+          placeholder=\"Buscar por nome...\"\n+          placeholderTextColor=\"#888\"\n+          value={searchQuery}\n+          onChangeText={setSearchQuery}\n+        />\n+      </View>\n+\n+      <FlatList\n+        data={filteredFuncionarios}\n+        keyExtractor={item => item.id.toString()}\n+        renderItem={({ item }) => (\n+          <View style={styles.listItem}>\n+            <View>\n+              <Text style={styles.listItemName}>{item.nome}</Text>\n+              <Text style={styles.listItemDetails}>RE: {item.re} | Setor: {item.setor}</Text>\n+            </View>\n+          </View>\n+        )}\n+        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum funcionário encontrado.</Text>}\n+        contentContainerStyle={{ paddingBottom: 20 }}\n+      />\n+\n+      <TouchableOpacity\n+        style={styles.fab}\n+        onPress={() => navigation.navigate('Employes')}\n+      >\n+        <Ionicons name=\"add\" size={30} color=\"#fff\" />\n+      />\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: '#F9FAFB',\n+    paddingHorizontal: 20,\n+    paddingTop: 20,\n+  },\n+  header: {\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+    marginBottom: 20,\n+  },\n+  title: {\n+    fontSize: 28,\n+    fontWeight: 'bold',\n+    color: '#333',\n+  },\n+  addButton: {\n+    backgroundColor: '#007BFF',\n+    flexDirection: 'row',\n+    paddingHorizontal: 14,\n+    paddingVertical: 8,\n+    borderRadius: 20,\n+    alignItems: 'center',\n+  },\n+  addButtonText: {\n+    color: '#fff',\n+    fontWeight: 'bold',\n+    marginLeft: 6,\n+  },\n+  searchContainer: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    paddingHorizontal: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    marginBottom: 20,\n+  },\n+  searchIcon: {\n+    marginRight: 8,\n+  },\n+  searchInput: {\n+    flex: 1,\n+    height: 45,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  listItem: {\n+    backgroundColor: '#fff',\n+    padding: 15,\n+    borderRadius: 10,\n+    marginBottom: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+  },\n+  listItemName: {\n+    fontSize: 17,\n+    fontWeight: '600',\n+    color: '#1E2A38',\n+  },\n+  listItemDetails: {\n+    fontSize: 14,\n+    color: '#666',\n+    marginTop: 4,\n+  },\n+  emptyText: {\n+    textAlign: 'center',\n+    marginTop: 50,\n+    color: '#777',\n+    fontSize: 16,\n+  },\n+  fab: {\n+    position: 'absolute',\n+    width: 60,\n+    height: 60,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    right: 20,\n+    bottom: 20,\n+    backgroundColor: '#007BFF',\n+    borderRadius: 30,\n+    elevation: 8,\n+    shadowColor: '#000',\n+    shadowRadius: 5,\n+    shadowOpacity: 0.3,\n+    shadowOffset: { height: 2, width: 0 },\n+  },\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760467784896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,157 @@\n+import { getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n+import { useEffect, useState } from \"react\";\n+import { FlatList, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [searchQuery, setSearchQuery] = useState('');\n+  const [allFuncionarios, setAllFuncionarios] = useState([]);\n+  const [filteredFuncionarios, setFilteredFuncionarios] = useState([]);\n+\n+  useEffect(() => {\n+    // Recarrega os dados sempre que a tela estiver em foco\n+    if (isFocused) {\n+      async function loadData() {\n+        const funcionarios = await getFuncionarios();\n+        setAllFuncionarios(funcionarios);\n+        setFilteredFuncionarios(funcionarios);\n+      }\n+      loadData();\n+    }\n+  }, [isFocused]);\n+\n+  useEffect(() => {\n+    const filtered = allFuncionarios.filter(func =>\n+      func.nome.toLowerCase().includes(searchQuery.toLowerCase())\n+    );\n+    setFilteredFuncionarios(filtered);\n+  }, [searchQuery, allFuncionarios]);\n+\n+  return (\n+    <View style={styles.container}>\n+      <View style={styles.header}>\n+        <Text style={styles.title}>Funcionários</Text>\n+      </View>\n+\n+      <View style={styles.searchContainer}>\n+        <Ionicons name=\"search\" size={20} color=\"#888\" style={styles.searchIcon} />\n+        <TextInput\n+          style={styles.searchInput}\n+          placeholder=\"Buscar por nome...\"\n+          placeholderTextColor=\"#888\"\n+          value={searchQuery}\n+          onChangeText={setSearchQuery}\n+        />\n+      </View>\n+\n+      <FlatList\n+        data={filteredFuncionarios}\n+        keyExtractor={item => item.id.toString()}\n+        renderItem={({ item }) => (\n+          <View style={styles.listItem}>\n+            <View>\n+              <Text style={styles.listItemName}>{item.nome}</Text>\n+              <Text style={styles.listItemDetails}>RE: {item.re} | Setor: {item.setor}</Text>\n+            </View>\n+          </View>\n+        )}\n+        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum funcionário encontrado.</Text>}\n+        contentContainerStyle={{ paddingBottom: 20 }}\n+      />\n+\n+      <TouchableOpacity\n+        style={styles.fab}\n+        onPress={() => navigation.navigate('Employes')}\n+      >\n+        <Ionicons name=\"add\" size={30} color=\"#fff\" />\n+      />\n+      </TouchableOpacity>\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: '#F9FAFB',\n+    paddingHorizontal: 20,\n+    paddingTop: 20,\n+  },\n+  header: {\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+    marginBottom: 20,\n+  },\n+  title: {\n+    fontSize: 28,\n+    fontWeight: 'bold',\n+    color: '#333',\n+  },\n+  searchContainer: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    paddingHorizontal: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    marginBottom: 20,\n+  },\n+  searchIcon: {\n+    marginRight: 8,\n+  },\n+  searchInput: {\n+    flex: 1,\n+    height: 45,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  listItem: {\n+    backgroundColor: '#fff',\n+    padding: 15,\n+    borderRadius: 10,\n+    marginBottom: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+  },\n+  listItemName: {\n+    fontSize: 17,\n+    fontWeight: '600',\n+    color: '#1E2A38',\n+  },\n+  listItemDetails: {\n+    fontSize: 14,\n+    color: '#666',\n+    marginTop: 4,\n+  },\n+  emptyText: {\n+    textAlign: 'center',\n+    marginTop: 50,\n+    color: '#777',\n+    fontSize: 16,\n+  },\n+  fab: {\n+    position: 'absolute',\n+    width: 60,\n+    height: 60,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    right: 20,\n+    bottom: 20,\n+    backgroundColor: '#007BFF',\n+    borderRadius: 30,\n+    elevation: 8,\n+    shadowColor: '#000',\n+    shadowRadius: 5,\n+    shadowOpacity: 0.3,\n+    shadowOffset: { height: 2, width: 0 },\n+  },\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760467868064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,268 @@\n+import { addFuncionario, getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n+import { useEffect, useState } from \"react\";\n+import { Alert, FlatList, Modal, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [searchQuery, setSearchQuery] = useState('');\n+  const [allFuncionarios, setAllFuncionarios] = useState([]);\n+  const [filteredFuncionarios, setFilteredFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  const loadData = async () => {\n+    const funcionarios = await getFuncionarios();\n+    setAllFuncionarios(funcionarios);\n+    setFilteredFuncionarios(funcionarios);\n+  };\n+\n+  useEffect(() => {\n+    // Recarrega os dados sempre que a tela estiver em foco\n+    if (isFocused) {\n+      loadData();\n+    }\n+  }, [isFocused]);\n+\n+  useEffect(() => {\n+    if (!searchQuery) {\n+      setFilteredFuncionarios(allFuncionarios);\n+      return;\n+    }\n+    const filtered = allFuncionarios.filter(\n+      func =>\n+        func.nome.toLowerCase().includes(searchQuery.toLowerCase()) ||\n+        func.re.includes(searchQuery) ||\n+        func.setor.toLowerCase().includes(searchQuery.toLowerCase())\n+    );\n+    setFilteredFuncionarios(filtered);\n+  }, [searchQuery, allFuncionarios]);\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setModalVisible(false);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    await loadData();\n+  };\n+\n+  return (\n+    <View style={styles.container}>\n+      <View style={styles.header}>\n+        <Text style={styles.title}>Funcionários</Text>\n+      </View>\n+\n+      <View style={styles.searchContainer}>\n+        <Ionicons name=\"search\" size={20} color=\"#888\" style={styles.searchIcon} />\n+        <TextInput\n+          style={styles.input}\n+          placeholder=\"Buscar por nome...\"\n+          placeholderTextColor=\"#888\"\n+          value={searchQuery}\n+          onChangeText={setSearchQuery}\n+        />\n+      </View>\n+\n+      <FlatList\n+        data={filteredFuncionarios}\n+        keyExtractor={item => item.id.toString()}\n+        renderItem={({ item }) => (\n+          <View style={styles.listItem}>\n+            <View>\n+              <Text style={styles.listItemName}>{item.nome}</Text>\n+              <Text style={styles.listItemDetails}>RE: {item.re} | Setor: {item.setor}</Text>\n+            </View>\n+          </View>\n+        )}\n+        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum funcionário encontrado.</Text>}\n+        contentContainerStyle={{ paddingBottom: 20 }}\n+      />\n+\n+      <TouchableOpacity style={styles.fab} onPress={() => setModalVisible(true)}>\n+        <Ionicons name=\"add\" size={30} color=\"#fff\" />\n+      </TouchableOpacity>\n+\n+      <Modal\n+        animationType=\"slide\"\n+        transparent={true}\n+        visible={modalVisible}\n+        onRequestClose={() => setModalVisible(false)}\n+      >\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome do funcionário\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.input}\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TextInput\n+              placeholder=\"RE (Registro do Empregado)\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.input}\n+              keyboardType=\"numeric\"\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.input}\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TouchableOpacity style={styles.button} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 8 }} />\n+              <Text style={styles.buttonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity\n+              style={styles.cancelButton}\n+              onPress={() => setModalVisible(false)}\n+            >\n+              <Text style={styles.cancelButtonText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: '#F9FAFB',\n+    paddingHorizontal: 20,\n+    paddingTop: 20,\n+  },\n+  header: {\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+    marginBottom: 20,\n+  },\n+  title: {\n+    fontSize: 28,\n+    fontWeight: 'bold',\n+    color: '#333',\n+  },\n+  searchContainer: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    paddingHorizontal: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    marginBottom: 20,\n+  },\n+  searchIcon: {\n+    marginRight: 8,\n+  },\n+  input: {\n+    flex: 1,\n+    height: 45,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  listItem: {\n+    backgroundColor: '#fff',\n+    padding: 15,\n+    borderRadius: 10,\n+    marginBottom: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+  },\n+  listItemName: {\n+    fontSize: 17,\n+    fontWeight: '600',\n+    color: '#1E2A38',\n+  },\n+  listItemDetails: {\n+    fontSize: 14,\n+    color: '#666',\n+    marginTop: 4,\n+  },\n+  emptyText: {\n+    textAlign: 'center',\n+    marginTop: 50,\n+    color: '#777',\n+    fontSize: 16,\n+  },\n+  fab: {\n+    position: 'absolute',\n+    width: 60,\n+    height: 60,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    right: 20,\n+    bottom: 20,\n+    backgroundColor: '#007BFF',\n+    borderRadius: 30,\n+    elevation: 8,\n+    shadowColor: '#000',\n+    shadowRadius: 5,\n+    shadowOpacity: 0.3,\n+    shadowOffset: { height: 2, width: 0 },\n+  },\n+  // Estilos do Modal\n+  modalContainer: {\n+    flex: 1,\n+    justifyContent: 'center',\n+    alignItems: 'center',\n+    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n+  },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: 'white',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+    shadowColor: '#000',\n+    shadowOffset: { width: 0, height: 2 },\n+    shadowOpacity: 0.25,\n+    shadowRadius: 4,\n+    elevation: 5,\n+  },\n+  modalTitle: {\n+    fontSize: 22,\n+    fontWeight: 'bold',\n+    marginBottom: 20,\n+    color: '#1E2A38',\n+  },\n+  button: {\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 14,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    flexDirection: 'row',\n+    justifyContent: 'center',\n+    marginTop: 8,\n+    width: '100%',\n+  },\n+  buttonText: {\n+    color: '#fff',\n+    fontSize: 17,\n+    fontWeight: '700',\n+  },\n+  cancelButton: {\n+    paddingVertical: 10,\n+    alignItems: 'center',\n+    marginTop: 8,\n+  },\n+  cancelButtonText: {\n+    color: '#007BFF',\n+    fontSize: 15,\n+    fontWeight: '600',\n+  },\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760467915715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+import { addFuncionario, getFuncionarios } from \"@/sqLite/SQLiteConecction\";\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from \"@react-navigation/native\";\n+import { useEffect, useState } from \"react\";\n+import { Alert, FlatList, Modal, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [searchQuery, setSearchQuery] = useState('');\n+  const [allFuncionarios, setAllFuncionarios] = useState([]);\n+  const [filteredFuncionarios, setFilteredFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  const loadData = async () => {\n+    const funcionarios = await getFuncionarios();\n+    setAllFuncionarios(funcionarios);\n+    setFilteredFuncionarios(funcionarios);\n+  };\n+\n+  useEffect(() => {\n+    // Recarrega os dados sempre que a tela estiver em foco\n+    if (isFocused) {\n+      loadData();\n+    }\n+  }, [isFocused]);\n+\n+  useEffect(() => {\n+    if (!searchQuery) {\n+      setFilteredFuncionarios(allFuncionarios);\n+      return;\n+    }\n+    const filtered = allFuncionarios.filter(\n+      func =>\n+        func.nome.toLowerCase().includes(searchQuery.toLowerCase()) ||\n+        func.re.includes(searchQuery) ||\n+        func.setor.toLowerCase().includes(searchQuery.toLowerCase())\n+    );\n+    setFilteredFuncionarios(filtered);\n+  }, [searchQuery, allFuncionarios]);\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setModalVisible(false);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    await loadData();\n+  };\n+\n+  return (\n+    <View style={styles.container}>\n+      <View style={styles.header}>\n+        <Text style={styles.title}>Funcionários</Text>\n+      </View>\n+\n+      <View style={styles.searchContainer}>\n+        <Ionicons name=\"search\" size={20} color=\"#888\" style={styles.searchIcon} />\n+        <TextInput\n+          style={styles.input}\n+          style={styles.searchInput}\n+          placeholder=\"Buscar por nome...\"\n+          placeholderTextColor=\"#888\"\n+          value={searchQuery}\n+          onChangeText={setSearchQuery}\n+        />\n+      </View>\n+\n+      <FlatList\n+        data={filteredFuncionarios}\n+        keyExtractor={item => item.id.toString()}\n+        renderItem={({ item }) => (\n+          <View style={styles.listItem}>\n+            <View>\n+              <Text style={styles.listItemName}>{item.nome}</Text>\n+              <Text style={styles.listItemDetails}>RE: {item.re} | Setor: {item.setor}</Text>\n+            </View>\n+          </View>\n+        )}\n+        ListEmptyComponent={<Text style={styles.emptyText}>Nenhum funcionário encontrado.</Text>}\n+        contentContainerStyle={{ paddingBottom: 20 }}\n+      />\n+\n+      <TouchableOpacity style={styles.fab} onPress={() => setModalVisible(true)}>\n+        <Ionicons name=\"add\" size={30} color=\"#fff\" />\n+      </TouchableOpacity>\n+\n+      <Modal\n+        animationType=\"slide\"\n+        transparent={true}\n+        visible={modalVisible}\n+        onRequestClose={() => setModalVisible(false)}\n+      >\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome do funcionário\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.input}\n+              style={styles.modalInput}\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TextInput\n+              placeholder=\"RE (Registro do Empregado)\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.input}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.input}\n+              style={styles.modalInput}\n+              placeholderTextColor=\"#888\"\n+            />\n+            <TouchableOpacity style={styles.button} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 8 }} />\n+              <Text style={styles.buttonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity\n+              style={styles.cancelButton}\n+              onPress={() => setModalVisible(false)}\n+            >\n+              <Text style={styles.cancelButtonText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </View>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: '#F9FAFB',\n+    paddingHorizontal: 20,\n+    paddingTop: 20,\n+  },\n+  header: {\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+    marginBottom: 20,\n+  },\n+  title: {\n+    fontSize: 28,\n+    fontWeight: 'bold',\n+    color: '#333',\n+  },\n+  searchContainer: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    paddingHorizontal: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    marginBottom: 20,\n+  },\n+  searchIcon: {\n+    marginRight: 8,\n+  },\n+  input: {\n+  searchInput: {\n+    flex: 1,\n+    height: 45,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  listItem: {\n+    backgroundColor: '#fff',\n+    padding: 15,\n+    borderRadius: 10,\n+    marginBottom: 10,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    flexDirection: 'row',\n+    justifyContent: 'space-between',\n+    alignItems: 'center',\n+  },\n+  listItemName: {\n+    fontSize: 17,\n+    fontWeight: '600',\n+    color: '#1E2A38',\n+  },\n+  listItemDetails: {\n+    fontSize: 14,\n+    color: '#666',\n+    marginTop: 4,\n+  },\n+  emptyText: {\n+    textAlign: 'center',\n+    marginTop: 50,\n+    color: '#777',\n+    fontSize: 16,\n+  },\n+  fab: {\n+    position: 'absolute',\n+    width: 60,\n+    height: 60,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    right: 20,\n+    bottom: 20,\n+    backgroundColor: '#007BFF',\n+    borderRadius: 30,\n+    elevation: 8,\n+    shadowColor: '#000',\n+    shadowRadius: 5,\n+    shadowOpacity: 0.3,\n+    shadowOffset: { height: 2, width: 0 },\n+  },\n+  // Estilos do Modal\n+  modalContainer: {\n+    flex: 1,\n+    justifyContent: 'center',\n+    alignItems: 'center',\n+    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n+  },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: 'white',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+    shadowColor: '#000',\n+    shadowOffset: { width: 0, height: 2 },\n+    shadowOpacity: 0.25,\n+    shadowRadius: 4,\n+    elevation: 5,\n+  },\n+  modalTitle: {\n+    fontSize: 22,\n+    fontWeight: 'bold',\n+    marginBottom: 20,\n+    color: '#1E2A38',\n+  },\n+  button: {\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 14,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    flexDirection: 'row',\n+    justifyContent: 'center',\n+    marginTop: 8,\n+    width: '100%',\n+  },\n+  buttonText: {\n+    color: '#fff',\n+    fontSize: 17,\n+    fontWeight: '700',\n+  },\n+  cancelButton: {\n+    paddingVertical: 10,\n+    alignItems: 'center',\n+    marginTop: 8,\n+  },\n+  cancelButtonText: {\n+    color: '#007BFF',\n+    fontSize: 15,\n+    fontWeight: '600',\n+  },\n+  modalInput: {\n+    width: '100%',\n+    height: 50,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    padding: 14,\n+    fontSize: 16,\n+    color: '#333',\n+    marginBottom: 12,\n+  },\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1760468274147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React, { useEffect, useState } from 'react';\n+import { View, Text, TouchableOpacity, FlatList, Modal, TextInput, StyleSheet, Alert, ScrollView } from 'react-native';\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from '@react-navigation/native';\n+import { LinearGradient } from 'expo-linear-gradient';\n+import { addFuncionario, getFuncionarios } from '@/sqLite/SQLiteConecction';\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [funcionarios, setFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  // Carrega os funcionários do banco\n+  const loadData = async () => {\n+    const data = await getFuncionarios();\n+    setFuncionarios(data);\n+  };\n+\n+  useEffect(() => {\n+    if (isFocused) loadData();\n+  }, [isFocused]);\n+\n+  // Dados do dashboard\n+  const total = funcionarios.length;\n+  const setores = [...new Set(funcionarios.map(f => f.setor))];\n+  const ultimos = funcionarios.slice(-3).reverse();\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    setModalVisible(false);\n+    await loadData();\n+  };\n+\n+  return (\n+    <LinearGradient colors={['#F5F9FF', '#FFFFFF']} style={styles.container}>\n+      <ScrollView contentContainerStyle={styles.scrollContainer} showsVerticalScrollIndicator={false}>\n+        <Text style={styles.greeting}>👋 Olá, bem-vindo!</Text>\n+\n+        {/* Seção de visão geral */}\n+        <Text style={styles.sectionTitle}>📊 Visão Geral</Text>\n+        <View style={styles.cardsContainer}>\n+          <View style={styles.card}>\n+            <Ionicons name=\"people-outline\" size={24} color=\"#007BFF\" />\n+            <Text style={styles.cardTitle}>Funcionários</Text>\n+            <Text style={styles.cardNumber}>{total}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"business-outline\" size={24} color=\"#28A745\" />\n+            <Text style={styles.cardTitle}>Setores</Text>\n+            <Text style={styles.cardNumber}>{setores.length}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"time-outline\" size={24} color=\"#FFC107\" />\n+            <Text style={styles.cardTitle}>Último cadastrado</Text>\n+            <Text style={styles.cardSmall}>\n+              {funcionarios.length > 0 ? funcionarios[funcionarios.length - 1].nome : '—'}\n+            </Text>\n+          </View>\n+        </View>\n+\n+        {/* Setores cadastrados */}\n+        <Text style={styles.sectionTitle}>🏭 Setores</Text>\n+        {setores.length > 0 ? (\n+          <View style={styles.setoresContainer}>\n+            {setores.map((s, i) => (\n+              <View key={i} style={styles.setorBadge}>\n+                <Text style={styles.setorText}>{s}</Text>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum setor cadastrado ainda.</Text>\n+        )}\n+\n+        {/* Últimos adicionados */}\n+        <Text style={styles.sectionTitle}>🕒 Últimos adicionados</Text>\n+        {ultimos.length > 0 ? (\n+          <FlatList\n+            data={ultimos}\n+            keyExtractor={item => item.id.toString()}\n+            renderItem={({ item }) => (\n+              <View style={styles.listItem}>\n+                <Ionicons name=\"person-circle-outline\" size={26} color=\"#007BFF\" />\n+                <View style={{ marginLeft: 10 }}>\n+                  <Text style={styles.listItemName}>{item.nome}</Text>\n+                  <Text style={styles.listItemDetails}>RE: {item.re} | {item.setor}</Text>\n+                </View>\n+              </View>\n+            )}\n+          />\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum funcionário cadastrado.</Text>\n+        )}\n+\n+        {/* Ações rápidas */}\n+        <Text style={styles.sectionTitle}>⚙️ Ações rápidas</Text>\n+        <View style={styles.actionsContainer}>\n+          <TouchableOpacity style={styles.actionButton} onPress={() => setModalVisible(true)}>\n+            <Ionicons name=\"add-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Adicionar</Text>\n+          </TouchableOpacity>\n+          <TouchableOpacity\n+            style={[styles.actionButton, { backgroundColor: '#6C63FF' }]}\n+            onPress={() => navigation.navigate('Employes')}\n+          >\n+            <Ionicons name=\"list-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Ver Todos</Text>\n+          </TouchableOpacity>\n+        </View>\n+      </ScrollView>\n+\n+      {/* Modal de cadastro */}\n+      <Modal visible={modalVisible} animationType=\"slide\" transparent={true} onRequestClose={() => setModalVisible(false)}>\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.modalInput}\n+            />\n+            <TextInput\n+              placeholder=\"RE\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.modalInput}\n+            />\n+            <TouchableOpacity style={styles.modalButton} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 6 }} />\n+              <Text style={styles.modalButtonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\n+              <Text style={styles.cancelText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </LinearGradient>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1 },\n+  scrollContainer: { padding: 20, paddingBottom: 50 },\n+  greeting: { fontSize: 24, fontWeight: '700', color: '#1E2A38', marginBottom: 15 },\n+  sectionTitle: { fontSize: 18, fontWeight: '600', color: '#1E2A38', marginTop: 20, marginBottom: 10 },\n+  cardsContainer: { flexDirection: 'row', justifyContent: 'space-between', flexWrap: 'wrap', gap: 10 },\n+  card: {\n+    backgroundColor: '#fff',\n+    flexBasis: '31%',\n+    padding: 15,\n+    borderRadius: 12,\n+    alignItems: 'center',\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  cardTitle: { fontSize: 14, color: '#555', marginTop: 8 },\n+  cardNumber: { fontSize: 22, fontWeight: '700', color: '#1E2A38', marginTop: 4 },\n+  cardSmall: { fontSize: 14, fontWeight: '600', color: '#1E2A38', marginTop: 4 },\n+  setoresContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 8 },\n+  setorBadge: { backgroundColor: '#E8F1FF', paddingVertical: 6, paddingHorizontal: 12, borderRadius: 15 },\n+  setorText: { color: '#007BFF', fontWeight: '600' },\n+  listItem: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    padding: 12,\n+    marginBottom: 8,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  listItemName: { fontSize: 16, fontWeight: '600', color: '#1E2A38' },\n+  listItemDetails: { fontSize: 14, color: '#555' },\n+  emptyText: { textAlign: 'center', color: '#777', fontSize: 15, marginVertical: 10 },\n+  actionsContainer: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 10 },\n+  actionButton: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+  },\n+  actionText: { color: '#fff', fontSize: 16, fontWeight: '600', marginLeft: 6 },\n+  modalContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: '#fff',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+  },\n+  modalTitle: { fontSize: 20, fontWeight: '700', marginBottom: 15, color: '#1E2A38' },\n+  modalInput: {\n+    width: '100%',\n+    height: 45,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                },
                {
                    "date": 1760468337894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React, { useEffect, useState } from 'react';\n+import { View, Text, TouchableOpacity, FlatList, Modal, TextInput, StyleSheet, Alert, ScrollView } from 'react-native';\n+import { View, Text, TouchableOpacity, Modal, TextInput, StyleSheet, Alert, ScrollView } from 'react-native';\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from '@react-navigation/native';\n+import { LinearGradient } from 'expo-linear-gradient';\n+import { addFuncionario, getFuncionarios } from '@/sqLite/SQLiteConecction';\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [funcionarios, setFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  // Carrega os funcionários do banco\n+  const loadData = async () => {\n+    const data = await getFuncionarios();\n+    setFuncionarios(data);\n+  };\n+\n+  useEffect(() => {\n+    if (isFocused) loadData();\n+  }, [isFocused]);\n+\n+  // Dados do dashboard\n+  const total = funcionarios.length;\n+  const setores = [...new Set(funcionarios.map(f => f.setor))];\n+  const ultimos = funcionarios.slice(-3).reverse();\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    setModalVisible(false);\n+    await loadData();\n+  };\n+\n+  return (\n+    <LinearGradient colors={['#F5F9FF', '#FFFFFF']} style={styles.container}>\n+      <ScrollView contentContainerStyle={styles.scrollContainer} showsVerticalScrollIndicator={false}>\n+        <Text style={styles.greeting}>👋 Olá, bem-vindo!</Text>\n+\n+        {/* Seção de visão geral */}\n+        <Text style={styles.sectionTitle}>📊 Visão Geral</Text>\n+        <View style={styles.cardsContainer}>\n+          <View style={styles.card}>\n+            <Ionicons name=\"people-outline\" size={24} color=\"#007BFF\" />\n+            <Text style={styles.cardTitle}>Funcionários</Text>\n+            <Text style={styles.cardNumber}>{total}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"business-outline\" size={24} color=\"#28A745\" />\n+            <Text style={styles.cardTitle}>Setores</Text>\n+            <Text style={styles.cardNumber}>{setores.length}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"time-outline\" size={24} color=\"#FFC107\" />\n+            <Text style={styles.cardTitle}>Último cadastrado</Text>\n+            <Text style={styles.cardSmall}>\n+              {funcionarios.length > 0 ? funcionarios[funcionarios.length - 1].nome : '—'}\n+            </Text>\n+          </View>\n+        </View>\n+\n+        {/* Setores cadastrados */}\n+        <Text style={styles.sectionTitle}>🏭 Setores</Text>\n+        {setores.length > 0 ? (\n+          <View style={styles.setoresContainer}>\n+            {setores.map((s, i) => (\n+              <View key={i} style={styles.setorBadge}>\n+                <Text style={styles.setorText}>{s}</Text>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum setor cadastrado ainda.</Text>\n+        )}\n+\n+        {/* Últimos adicionados */}\n+        <Text style={styles.sectionTitle}>🕒 Últimos adicionados</Text>\n+        {ultimos.length > 0 ? (\n+          <FlatList\n+            data={ultimos}\n+            keyExtractor={item => item.id.toString()}\n+            renderItem={({ item }) => (\n+              <View style={styles.listItem}>\n+          <View>\n+            {ultimos.map(item => (\n+              <View key={item.id.toString()} style={styles.listItem}>\n+                <Ionicons name=\"person-circle-outline\" size={26} color=\"#007BFF\" />\n+                <View style={{ marginLeft: 10 }}>\n+                  <Text style={styles.listItemName}>{item.nome}</Text>\n+                  <Text style={styles.listItemDetails}>RE: {item.re} | {item.setor}</Text>\n+                </View>\n+              </View>\n+            )}\n+          />\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum funcionário cadastrado.</Text>\n+        )}\n+\n+        {/* Ações rápidas */}\n+        <Text style={styles.sectionTitle}>⚙️ Ações rápidas</Text>\n+        <View style={styles.actionsContainer}>\n+          <TouchableOpacity style={styles.actionButton} onPress={() => setModalVisible(true)}>\n+            <Ionicons name=\"add-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Adicionar</Text>\n+          </TouchableOpacity>\n+          <TouchableOpacity\n+            style={[styles.actionButton, { backgroundColor: '#6C63FF' }]}\n+            onPress={() => navigation.navigate('Employes')}\n+          >\n+            <Ionicons name=\"list-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Ver Todos</Text>\n+          </TouchableOpacity>\n+        </View>\n+      </ScrollView>\n+\n+      {/* Modal de cadastro */}\n+      <Modal visible={modalVisible} animationType=\"slide\" transparent={true} onRequestClose={() => setModalVisible(false)}>\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.modalInput}\n+            />\n+            <TextInput\n+              placeholder=\"RE\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.modalInput}\n+            />\n+            <TouchableOpacity style={styles.modalButton} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 6 }} />\n+              <Text style={styles.modalButtonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\n+              <Text style={styles.cancelText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </LinearGradient>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1 },\n+  scrollContainer: { padding: 20, paddingBottom: 50 },\n+  greeting: { fontSize: 24, fontWeight: '700', color: '#1E2A38', marginBottom: 15 },\n+  sectionTitle: { fontSize: 18, fontWeight: '600', color: '#1E2A38', marginTop: 20, marginBottom: 10 },\n+  cardsContainer: { flexDirection: 'row', justifyContent: 'space-between', flexWrap: 'wrap', gap: 10 },\n+  card: {\n+    backgroundColor: '#fff',\n+    flexBasis: '31%',\n+    padding: 15,\n+    borderRadius: 12,\n+    alignItems: 'center',\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  cardTitle: { fontSize: 14, color: '#555', marginTop: 8 },\n+  cardNumber: { fontSize: 22, fontWeight: '700', color: '#1E2A38', marginTop: 4 },\n+  cardSmall: { fontSize: 14, fontWeight: '600', color: '#1E2A38', marginTop: 4 },\n+  setoresContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 8 },\n+  setorBadge: { backgroundColor: '#E8F1FF', paddingVertical: 6, paddingHorizontal: 12, borderRadius: 15 },\n+  setorText: { color: '#007BFF', fontWeight: '600' },\n+  listItem: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    padding: 12,\n+    marginBottom: 8,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  listItemName: { fontSize: 16, fontWeight: '600', color: '#1E2A38' },\n+  listItemDetails: { fontSize: 14, color: '#555' },\n+  emptyText: { textAlign: 'center', color: '#777', fontSize: 15, marginVertical: 10 },\n+  actionsContainer: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 10 },\n+  actionButton: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+  },\n+  actionText: { color: '#fff', fontSize: 16, fontWeight: '600', marginLeft: 6 },\n+  modalContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: '#fff',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+  },\n+  modalTitle: { fontSize: 20, fontWeight: '700', marginBottom: 15, color: '#1E2A38' },\n+  modalInput: {\n+    width: '100%',\n+    height: 45,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                },
                {
                    "date": 1760468401437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,234 @@\n+import { addFuncionario, getFuncionarios } from '@/sqLite/SQLiteConecction';\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from '@react-navigation/native';\n+import { LinearGradient } from 'expo-linear-gradient';\n+import { useEffect, useState } from 'react';\n+import { Alert, Modal, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [funcionarios, setFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  // Carrega os funcionários do banco\n+  const loadData = async () => {\n+    const data = await getFuncionarios();\n+    setFuncionarios(data);\n+  };\n+\n+  useEffect(() => {\n+    if (isFocused) loadData();\n+  }, [isFocused]);\n+\n+  // Dados do dashboard\n+  const total = funcionarios.length;\n+  const setores = [...new Set(funcionarios.map(f => f.setor))];\n+  const ultimos = funcionarios.slice(-3).reverse();\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    setModalVisible(false);\n+    await loadData();\n+  };\n+\n+  return (\n+    <LinearGradient colors={['#F5F9FF', '#FFFFFF']} style={styles.container}>\n+      <ScrollView contentContainerStyle={styles.scrollContainer} showsVerticalScrollIndicator={false}>\n+        <Text style={styles.greeting}>👋 Olá, bem-vindo!</Text>\n+\n+        {/* Seção de visão geral */}\n+        <Text style={styles.sectionTitle}>📊 Visão Geral</Text>\n+        <View style={styles.cardsContainer}>\n+          <View style={styles.card}>\n+            <Ionicons name=\"people-outline\" size={24} color=\"#007BFF\" />\n+            <Text style={styles.cardTitle}>Funcionários</Text>\n+            <Text style={styles.cardNumber}>{total}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"business-outline\" size={24} color=\"#28A745\" />\n+            <Text style={styles.cardTitle}>Setores</Text>\n+            <Text style={styles.cardNumber}>{setores.length}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"time-outline\" size={24} color=\"#FFC107\" />\n+            <Text style={styles.cardTitle}>Último cadastrado</Text>\n+            <Text style={styles.cardSmall}>\n+              {funcionarios.length > 0 ? funcionarios[funcionarios.length - 1].nome : '—'}\n+            </Text>\n+          </View>\n+        </View>\n+\n+        {/* Setores cadastrados */}\n+        <Text style={styles.sectionTitle}>🏭 Setores</Text>\n+        {setores.length > 0 ? (\n+          <View style={styles.setoresContainer}>\n+            {setores.map((s, i) => (\n+              <View key={i} style={styles.setorBadge}>\n+                <Text style={styles.setorText}>{s}</Text>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum setor cadastrado ainda.</Text>\n+        )}\n+\n+        {/* Últimos adicionados */}\n+        <Text style={styles.sectionTitle}>🕒 Últimos adicionados</Text>\n+        {ultimos.length > 0 ? (\n+          <View>\n+            {ultimos.map(item => (\n+              <View key={item.id.toString()} style={styles.listItem}>\n+                <Ionicons name=\"person-circle-outline\" size={26} color=\"#007BFF\" />\n+                <View style={{ marginLeft: 10 }}>\n+                  <Text style={styles.listItemName}>{item.nome}</Text>\n+                  <Text style={styles.listItemDetails}>RE: {item.re} | {item.setor}</Text>\n+                </View>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum funcionário cadastrado.</Text>\n+        )}\n+\n+        {/* Ações rápidas */}\n+        <Text style={styles.sectionTitle}>⚙️ Ações rápidas</Text>\n+        <View style={styles.actionsContainer}>\n+          <TouchableOpacity style={styles.actionButton} onPress={() => setModalVisible(true)}>\n+            <Ionicons name=\"add-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Adicionar</Text>\n+          </TouchableOpacity>\n+          <TouchableOpacity\n+            style={[styles.actionButton, { backgroundColor: '#6C63FF' }]}\n+            onPress={() => navigation.navigate('Employes')}\n+          >\n+            <Ionicons name=\"list-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Ver Todos</Text>\n+          </TouchableOpacity>\n+        </View>\n+      </ScrollView>\n+\n+      {/* Modal de cadastro */}\n+      <Modal visible={modalVisible} animationType=\"slide\" transparent={true} onRequestClose={() => setModalVisible(false)}>\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.modalInput}\n+            />\n+            <TextInput\n+              placeholder=\"RE\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.modalInput}\n+            />\n+            <TouchableOpacity style={styles.modalButton} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 6 }} />\n+              <Text style={styles.modalButtonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\n+              <Text style={styles.cancelText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </LinearGradient>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1 },\n+  scrollContainer: { padding: 20, paddingBottom: 50 },\n+  greeting: { fontSize: 24, fontWeight: '700', color: '#1E2A38', marginBottom: 15 },\n+  sectionTitle: { fontSize: 18, fontWeight: '600', color: '#1E2A38', marginTop: 20, marginBottom: 10 },\n+  cardsContainer: { flexDirection: 'row', justifyContent: 'space-between', flexWrap: 'wrap', gap: 10 },\n+  cardsContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 10 },\n+  card: {\n+    backgroundColor: '#fff',\n+    flexBasis: '31%',\n+    padding: 15,\n+    borderRadius: 12,\n+    alignItems: 'center',\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  cardTitle: { fontSize: 14, color: '#555', marginTop: 8 },\n+  cardNumber: { fontSize: 22, fontWeight: '700', color: '#1E2A38', marginTop: 4 },\n+  cardSmall: { fontSize: 14, fontWeight: '600', color: '#1E2A38', marginTop: 4 },\n+  setoresContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 8 },\n+  setorBadge: { backgroundColor: '#E8F1FF', paddingVertical: 6, paddingHorizontal: 12, borderRadius: 15 },\n+  setorText: { color: '#007BFF', fontWeight: '600' },\n+  listItem: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    padding: 12,\n+    marginBottom: 8,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  listItemName: { fontSize: 16, fontWeight: '600', color: '#1E2A38' },\n+  listItemDetails: { fontSize: 14, color: '#555' },\n+  emptyText: { textAlign: 'center', color: '#777', fontSize: 15, marginVertical: 10 },\n+  actionsContainer: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 10 },\n+  actionButton: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+  },\n+  actionText: { color: '#fff', fontSize: 16, fontWeight: '600', marginLeft: 6 },\n+  modalContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: '#fff',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+  },\n+  modalTitle: { fontSize: 20, fontWeight: '700', marginBottom: 15, color: '#1E2A38' },\n+  modalInput: {\n+    width: '100%',\n+    height: 45,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                },
                {
                    "date": 1760468416879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,233 @@\n+import { addFuncionario, getFuncionarios } from '@/sqLite/SQLiteConecction';\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from '@react-navigation/native';\n+import { LinearGradient } from 'expo-linear-gradient';\n+import { useEffect, useState } from 'react';\n+import { Alert, Modal, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [funcionarios, setFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  // Carrega os funcionários do banco\n+  const loadData = async () => {\n+    const data = await getFuncionarios();\n+    setFuncionarios(data);\n+  };\n+\n+  useEffect(() => {\n+    if (isFocused) loadData();\n+  }, [isFocused]);\n+\n+  // Dados do dashboard\n+  const total = funcionarios.length;\n+  const setores = [...new Set(funcionarios.map(f => f.setor))];\n+  const ultimos = funcionarios.slice(-3).reverse();\n+\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+    await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+    setNewEmployee({ nome: '', re: '', setor: '' });\n+    setModalVisible(false);\n+    await loadData();\n+  };\n+\n+  return (\n+    <LinearGradient colors={['#F5F9FF', '#FFFFFF']} style={styles.container}>\n+      <ScrollView contentContainerStyle={styles.scrollContainer} showsVerticalScrollIndicator={false}>\n+        <Text style={styles.greeting}>👋 Olá, bem-vindo!</Text>\n+\n+        {/* Seção de visão geral */}\n+        <Text style={styles.sectionTitle}>📊 Visão Geral</Text>\n+        <View style={styles.cardsContainer}>\n+          <View style={styles.card}>\n+            <Ionicons name=\"people-outline\" size={24} color=\"#007BFF\" />\n+            <Text style={styles.cardTitle}>Funcionários</Text>\n+            <Text style={styles.cardNumber}>{total}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"business-outline\" size={24} color=\"#28A745\" />\n+            <Text style={styles.cardTitle}>Setores</Text>\n+            <Text style={styles.cardNumber}>{setores.length}</Text>\n+          </View>\n+          <View style={styles.card}>\n+            <Ionicons name=\"time-outline\" size={24} color=\"#FFC107\" />\n+            <Text style={styles.cardTitle}>Último cadastrado</Text>\n+            <Text style={styles.cardSmall}>\n+              {funcionarios.length > 0 ? funcionarios[funcionarios.length - 1].nome : '—'}\n+            </Text>\n+          </View>\n+        </View>\n+\n+        {/* Setores cadastrados */}\n+        <Text style={styles.sectionTitle}>🏭 Setores</Text>\n+        {setores.length > 0 ? (\n+          <View style={styles.setoresContainer}>\n+            {setores.map((s, i) => (\n+              <View key={i} style={styles.setorBadge}>\n+                <Text style={styles.setorText}>{s}</Text>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum setor cadastrado ainda.</Text>\n+        )}\n+\n+        {/* Últimos adicionados */}\n+        <Text style={styles.sectionTitle}>🕒 Últimos adicionados</Text>\n+        {ultimos.length > 0 ? (\n+          <View>\n+            {ultimos.map(item => (\n+              <View key={item.id.toString()} style={styles.listItem}>\n+                <Ionicons name=\"person-circle-outline\" size={26} color=\"#007BFF\" />\n+                <View style={{ marginLeft: 10 }}>\n+                  <Text style={styles.listItemName}>{item.nome}</Text>\n+                  <Text style={styles.listItemDetails}>RE: {item.re} | {item.setor}</Text>\n+                </View>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum funcionário cadastrado.</Text>\n+        )}\n+\n+        {/* Ações rápidas */}\n+        <Text style={styles.sectionTitle}>⚙️ Ações rápidas</Text>\n+        <View style={styles.actionsContainer}>\n+          <TouchableOpacity style={styles.actionButton} onPress={() => setModalVisible(true)}>\n+            <Ionicons name=\"add-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Adicionar</Text>\n+          </TouchableOpacity>\n+          <TouchableOpacity\n+            style={[styles.actionButton, { backgroundColor: '#6C63FF' }]}\n+            onPress={() => navigation.navigate('Employes')}\n+          >\n+            <Ionicons name=\"list-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Ver Todos</Text>\n+          </TouchableOpacity>\n+        </View>\n+      </ScrollView>\n+\n+      {/* Modal de cadastro */}\n+      <Modal visible={modalVisible} animationType=\"slide\" transparent={true} onRequestClose={() => setModalVisible(false)}>\n+        <View style={styles.modalContainer}>\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+            <TextInput\n+              placeholder=\"Nome\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.modalInput}\n+            />\n+            <TextInput\n+              placeholder=\"RE\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.modalInput}\n+            />\n+            <TouchableOpacity style={styles.modalButton} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 6 }} />\n+              <Text style={styles.modalButtonText}>Salvar</Text>\n+            </TouchableOpacity>\n+            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\n+              <Text style={styles.cancelText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </View>\n+      </Modal>\n+    </LinearGradient>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1 },\n+  scrollContainer: { padding: 20, paddingBottom: 50 },\n+  greeting: { fontSize: 24, fontWeight: '700', color: '#1E2A38', marginBottom: 15 },\n+  sectionTitle: { fontSize: 18, fontWeight: '600', color: '#1E2A38', marginTop: 20, marginBottom: 10 },\n+  cardsContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 10 },\n+  card: {\n+    backgroundColor: '#fff',\n+    flexBasis: '31%',\n+    padding: 15,\n+    borderRadius: 12,\n+    alignItems: 'center',\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  cardTitle: { fontSize: 14, color: '#555', marginTop: 8 },\n+  cardNumber: { fontSize: 22, fontWeight: '700', color: '#1E2A38', marginTop: 4 },\n+  cardSmall: { fontSize: 14, fontWeight: '600', color: '#1E2A38', marginTop: 4 },\n+  setoresContainer: { flexDirection: 'row', flexWrap: 'wrap', gap: 8 },\n+  setorBadge: { backgroundColor: '#E8F1FF', paddingVertical: 6, paddingHorizontal: 12, borderRadius: 15 },\n+  setorText: { color: '#007BFF', fontWeight: '600' },\n+  listItem: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    padding: 12,\n+    marginBottom: 8,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  listItemName: { fontSize: 16, fontWeight: '600', color: '#1E2A38' },\n+  listItemDetails: { fontSize: 14, color: '#555' },\n+  emptyText: { textAlign: 'center', color: '#777', fontSize: 15, marginVertical: 10 },\n+  actionsContainer: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 10 },\n+  actionButton: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+  },\n+  actionText: { color: '#fff', fontSize: 16, fontWeight: '600', marginLeft: 6 },\n+  modalContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: '#fff',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+  },\n+  modalTitle: { fontSize: 20, fontWeight: '700', marginBottom: 15, color: '#1E2A38' },\n+  modalInput: {\n+    width: '100%',\n+    height: 45,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                },
                {
                    "date": 1760468469708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,5 +226,24 @@\n     height: 45,\n     backgroundColor: '#F9FAFB',\n     borderWidth: 1,\n     borderColor: '#D1D9E6',\n-    borderRadiu\n\\ No newline at end of file\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                },
                {
                    "date": 1760468611078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,284 @@\n+import { addFuncionario, getFuncionarios } from '@/sqLite/SQLiteConecction';\n+import { Ionicons } from '@expo/vector-icons';\n+import { useIsFocused, useNavigation } from '@react-navigation/native';\n+import { LinearGradient } from 'expo-linear-gradient';\n+import React, { useEffect, useState } from 'react';\n+import {\n+  Alert,\n+  FlatList,\n+  Keyboard,\n+  KeyboardAvoidingView,\n+  Modal,\n+  Platform,\n+  ScrollView,\n+  StyleSheet,\n+  Text,\n+  TextInput,\n+  TouchableOpacity,\n+  View\n+} from 'react-native';\n+\n+export default function Home() {\n+  const navigation = useNavigation();\n+  const isFocused = useIsFocused();\n+\n+  const [funcionarios, setFuncionarios] = useState([]);\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [newEmployee, setNewEmployee] = useState({ nome: '', re: '', setor: '' });\n+\n+  // 🔹 Carrega os funcionários do banco com tratamento de erro\n+  const loadData = async () => {\n+    try {\n+      const data = await getFuncionarios();\n+      setFuncionarios(data);\n+    } catch (error) {\n+      console.error(\"Erro ao carregar dados:\", error);\n+      Alert.alert(\"Erro\", \"Não foi possível carregar os funcionários.\");\n+    }\n+  };\n+\n+  useEffect(() => {\n+    if (isFocused) loadData();\n+  }, [isFocused]);\n+\n+  // 🔹 Dados do dashboard\n+  const total = funcionarios.length;\n+  const setores = [...new Set(funcionarios.map(f => f.setor))];\n+  const ultimos = funcionarios.slice(-3).reverse();\n+\n+  // 🔹 Adicionar funcionário\n+  const handleAdd = async () => {\n+    if (!newEmployee.nome || !newEmployee.re || !newEmployee.setor) {\n+      return Alert.alert('Erro', 'Por favor, preencha todos os campos.');\n+    }\n+\n+    try {\n+      await addFuncionario(newEmployee.nome, newEmployee.re, newEmployee.setor);\n+      setNewEmployee({ nome: '', re: '', setor: '' });\n+      setModalVisible(false);\n+      Keyboard.dismiss();\n+      await loadData();\n+      Alert.alert(\"Sucesso\", \"Funcionário adicionado com sucesso!\");\n+    } catch (error) {\n+      console.error(\"Erro ao adicionar funcionário:\", error);\n+      Alert.alert(\"Erro\", \"Não foi possível salvar o funcionário.\");\n+    }\n+  };\n+\n+  return (\n+    <LinearGradient colors={['#F5F9FF', '#FFFFFF']} style={styles.container}>\n+      <ScrollView contentContainerStyle={styles.scrollContainer} showsVerticalScrollIndicator={false}>\n+        <Text style={styles.greeting}>👋 Olá, bem-vindo!</Text>\n+\n+        {/* 🔹 Seção de visão geral */}\n+        <Text style={styles.sectionTitle}>📊 Visão Geral</Text>\n+        <View style={styles.cardsContainer}>\n+          <View style={styles.card}>\n+            <Ionicons name=\"people-outline\" size={24} color=\"#007BFF\" />\n+            <Text style={styles.cardTitle}>Funcionários</Text>\n+            <Text style={styles.cardNumber}>{total}</Text>\n+          </View>\n+\n+          <View style={styles.card}>\n+            <Ionicons name=\"business-outline\" size={24} color=\"#28A745\" />\n+            <Text style={styles.cardTitle}>Setores</Text>\n+            <Text style={styles.cardNumber}>{setores.length}</Text>\n+          </View>\n+\n+          <View style={styles.card}>\n+            <Ionicons name=\"time-outline\" size={24} color=\"#FFC107\" />\n+            <Text style={styles.cardTitle}>Último cadastrado</Text>\n+            <Text\n+              style={styles.cardSmall}\n+              numberOfLines={2}\n+              ellipsizeMode=\"tail\"\n+            >\n+              {funcionarios.length > 0 ? funcionarios[funcionarios.length - 1].nome : '—'}\n+            </Text>\n+          </View>\n+        </View>\n+\n+        {/* 🔹 Setores cadastrados */}\n+        <Text style={styles.sectionTitle}>🏭 Setores</Text>\n+        {setores.length > 0 ? (\n+          <View style={styles.setoresContainer}>\n+            {setores.map((s, i) => (\n+              <View key={i} style={styles.setorBadge}>\n+                <Text style={styles.setorText}>{s}</Text>\n+              </View>\n+            ))}\n+          </View>\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum setor cadastrado ainda.</Text>\n+        )}\n+\n+        {/* 🔹 Últimos adicionados */}\n+        <Text style={styles.sectionTitle}>🕒 Últimos adicionados</Text>\n+        {ultimos.length > 0 ? (\n+          <FlatList\n+            data={ultimos}\n+            keyExtractor={item => item.id.toString()}\n+            renderItem={({ item }) => (\n+              <View style={styles.listItem}>\n+                <Ionicons name=\"person-circle-outline\" size={26} color=\"#007BFF\" />\n+                <View style={{ marginLeft: 10 }}>\n+                  <Text style={styles.listItemName}>{item.nome}</Text>\n+                  <Text style={styles.listItemDetails}>RE: {item.re} | {item.setor}</Text>\n+                </View>\n+              </View>\n+            )}\n+          />\n+        ) : (\n+          <Text style={styles.emptyText}>Nenhum funcionário cadastrado.</Text>\n+        )}\n+\n+        {/* 🔹 Ações rápidas */}\n+        <Text style={styles.sectionTitle}>⚙️ Ações rápidas</Text>\n+        <View style={styles.actionsContainer}>\n+          <TouchableOpacity style={styles.actionButton} onPress={() => setModalVisible(true)}>\n+            <Ionicons name=\"add-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Adicionar</Text>\n+          </TouchableOpacity>\n+\n+          <TouchableOpacity\n+            style={[styles.actionButton, { backgroundColor: '#6C63FF' }]}\n+            onPress={() => navigation.navigate('Employes')}\n+          >\n+            <Ionicons name=\"list-outline\" size={22} color=\"#fff\" />\n+            <Text style={styles.actionText}>Ver Todos</Text>\n+          </TouchableOpacity>\n+        </View>\n+      </ScrollView>\n+\n+      {/* 🔹 Modal de cadastro com KeyboardAvoidingView */}\n+      <Modal visible={modalVisible} animationType=\"slide\" transparent={true} onRequestClose={() => setModalVisible(false)}>\n+        <KeyboardAvoidingView\n+          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n+          style={styles.modalContainer}\n+        >\n+          <View style={styles.modalView}>\n+            <Text style={styles.modalTitle}>Adicionar Funcionário</Text>\n+\n+            <TextInput\n+              placeholder=\"Nome\"\n+              value={newEmployee.nome}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, nome: text })}\n+              style={styles.modalInput}\n+            />\n+            <TextInput\n+              placeholder=\"RE\"\n+              value={newEmployee.re}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, re: text })}\n+              style={styles.modalInput}\n+              keyboardType=\"numeric\"\n+            />\n+            <TextInput\n+              placeholder=\"Setor\"\n+              value={newEmployee.setor}\n+              onChangeText={text => setNewEmployee({ ...newEmployee, setor: text })}\n+              style={styles.modalInput}\n+            />\n+\n+            <TouchableOpacity style={styles.modalButton} onPress={handleAdd}>\n+              <Ionicons name=\"save-outline\" size={20} color=\"#fff\" style={{ marginRight: 6 }} />\n+              <Text style={styles.modalButtonText}>Salvar</Text>\n+            </TouchableOpacity>\n+\n+            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\n+              <Text style={styles.cancelText}>Cancelar</Text>\n+            </TouchableOpacity>\n+          </View>\n+        </KeyboardAvoidingView>\n+      </Modal>\n+    </LinearGradient>\n+  );\n+}\n+\n+const styles = StyleSheet.create({\n+  container: { flex: 1 },\n+  scrollContainer: { padding: 20, paddingBottom: 50 },\n+  greeting: { fontSize: 24, fontWeight: '700', color: '#1E2A38', marginBottom: 15 },\n+  sectionTitle: { fontSize: 18, fontWeight: '600', color: '#1E2A38', marginTop: 20, marginBottom: 10 },\n+\n+  // 🔹 Corrigido: substituição do gap\n+  cardsContainer: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' },\n+  card: {\n+    backgroundColor: '#fff',\n+    width: '31%',\n+    marginBottom: 10,\n+    padding: 15,\n+    borderRadius: 12,\n+    justifyContent: 'space-between',\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+    minHeight: 110,\n+  },\n+\n+  cardTitle: { fontSize: 14, color: '#555', marginTop: 8, textAlign: 'center' },\n+  cardNumber: { fontSize: 22, fontWeight: '700', color: '#1E2A38', marginTop: 4, textAlign: 'center' },\n+  cardSmall: { fontSize: 14, fontWeight: '600', color: '#1E2A38', marginTop: 4, textAlign: 'center' },\n+\n+  setoresContainer: { flexDirection: 'row', flexWrap: 'wrap', marginHorizontal: -4 },\n+  setorBadge: { backgroundColor: '#E8F1FF', paddingVertical: 6, paddingHorizontal: 12, borderRadius: 15, margin: 4 },\n+  setorText: { color: '#007BFF', fontWeight: '600' },\n+\n+  listItem: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#fff',\n+    borderRadius: 10,\n+    padding: 12,\n+    marginBottom: 8,\n+    borderWidth: 1,\n+    borderColor: '#E2E8F0',\n+  },\n+  listItemName: { fontSize: 16, fontWeight: '600', color: '#1E2A38' },\n+  listItemDetails: { fontSize: 14, color: '#555' },\n+  emptyText: { textAlign: 'center', color: '#777', fontSize: 15, marginVertical: 10 },\n+\n+  actionsContainer: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 10 },\n+  actionButton: {\n+    flexDirection: 'row',\n+    alignItems: 'center',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+  },\n+  actionText: { color: '#fff', fontSize: 16, fontWeight: '600', marginLeft: 6 },\n+\n+  modalContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\n+  modalView: {\n+    width: '90%',\n+    backgroundColor: '#fff',\n+    borderRadius: 20,\n+    padding: 25,\n+    alignItems: 'center',\n+  },\n+  modalTitle: { fontSize: 20, fontWeight: '700', marginBottom: 15, color: '#1E2A38' },\n+  modalInput: {\n+    width: '100%',\n+    height: 45,\n+    backgroundColor: '#F9FAFB',\n+    borderWidth: 1,\n+    borderColor: '#D1D9E6',\n+    borderRadius: 10,\n+    paddingHorizontal: 12,\n+    marginBottom: 10,\n+    fontSize: 16,\n+    color: '#333',\n+  },\n+  modalButton: {\n+    flexDirection: 'row',\n+    backgroundColor: '#007BFF',\n+    paddingVertical: 12,\n+    paddingHorizontal: 20,\n+    borderRadius: 10,\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+    width: '100%',\n+  },\n+  modalButtonText: { color: '#fff', fontWeight: '700', fontSize: 16 },\n+  cancelButton: { marginTop: 10 },\n+  cancelText: { color: '#007BFF', fontWeight: '600', fontSize: 15 },\n+});\n"
                }
            ],
            "date": 1760462606139,
            "name": "Commit-0",
            "content": "import { StyleSheet, Text, View } from \"react-native\";\n\n\nexport default function Home() {\n  return (\n    <View style={styles.container}>\n      <Text>Home</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}\n\n)"
        }
    ]
}